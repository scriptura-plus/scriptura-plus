export default async function handler(req, res) {
  if (req.method !== 'POST') {
    return res.status(405).end('Method Not Allowed');
  }

  try {
    const body = req.body;
    const msg = body.message;

    if (!msg || !msg.text) {
      return res.status(200).json({ ok: true });
    }

    const TELEGRAM_BOT_TOKEN = process.env.TELEGRAM_BOT_TOKEN;
    const ADMIN_CHAT_ID = process.env.TELEGRAM_ADMIN_CHAT_ID;
    const TELEGRAM_API = `https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}`;

    const text = msg.text.trim();
    const chatId = msg.chat.id.toString();
    const senderId = msg.from.id.toString();
    const senderName = msg.from.first_name || '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å';

    if (text === '/start') {
      await fetch(`${TELEGRAM_API}/sendMessage`, {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({
          chat_id: chatId,
          text: 'üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –û—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ –±–∏–±–ª–µ–π—Å–∫–∏–π —Å—Ç–∏—Ö, –Ω–∞–ø—Ä–∏–º–µ—Ä ¬´–ò–æ–∞–Ω–Ω–∞ 3:16¬ª, –∏ —è –ø–æ–¥–≥–æ—Ç–æ–≤–ª—é –¥–ª—è –≤–∞—Å –∫–∞—Ä—Ç–æ—á–∫—É —Å –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ–º.',
        }),
      });
      return res.status(200).json({ ok: true });
    }

    // ADMIN MODE (–û–±–Ω–æ–≤–ª–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è)
    if (senderId === ADMIN_CHAT_ID && text.startsWith('/send')) {
      const parts = text.split('|');
      // –¢–µ–ø–µ—Ä—å —Ñ–æ—Ä–º–∞—Ç /send <ID> | <—Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è>
      // –ó–Ω–∞—á–∏—Ç, –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –∫–∞–∫ –º–∏–Ω–∏–º—É–º 2 —á–∞—Å—Ç–∏
      if (parts.length < 2) {
        await fetch(`${TELEGRAM_API}/sendMessage`, {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({
            chat_id: ADMIN_CHAT_ID,
            text: '‚ùå –û—à–∏–±–∫–∞: –Ω–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç. –ù—É–∂–Ω–æ: /send <ID> | <—Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è>',
          }),
        });
        return res.status(200).json({ ok: true });
      }

      const targetChatId = parts[0].replace('/send', '').trim();
      const messageToSend = parts.slice(1).join('|').trim();

      if (!targetChatId || !messageToSend) {
        await fetch(`${TELEGRAM_API}/sendMessage`, {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({
            chat_id: ADMIN_CHAT_ID,
            text: '‚ùå –û—à–∏–±–∫–∞: –Ω–µ —É–∫–∞–∑–∞–Ω ID –∏–ª–∏ —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è.',
          }),
        });
        return res.status(200).json({ ok: true });
      }


      await fetch(`${TELEGRAM_API}/sendMessage`, {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({
          chat_id: targetChatId,
          text: messageToSend,
          parse_mode: 'Markdown', // –≠—Ç–∞ —Å—Ç—Ä–æ–∫–∞ –ø–æ–∑–≤–æ–ª—è–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å **–∂–∏—Ä–Ω—ã–π** –∏ [—Å—Å—ã–ª–∫–∏](url)
          disable_web_page_preview: true, // –û—Ç–∫–ª—é—á–∞–µ–º –ø—Ä–µ–≤—å—é —Å—Å—ã–ª–æ–∫ –¥–ª—è —á–∏—Å—Ç–æ—Ç—ã —Å–æ–æ–±—â–µ–Ω–∏—è
        }),
      });

      await fetch(`${TELEGRAM_API}/sendMessage`, {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({
          chat_id: ADMIN_CHAT_ID,
          text: '‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!',
        }),
      });

      return res.status(200).json({ ok: true });
    }

    // –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –æ—Ç–≤–µ—Ç
    const autoReplyText = `üëã –°–ø–∞—Å–∏–±–æ, ${senderName}! –í–∞—à –∑–∞–ø—Ä–æ—Å –Ω–∞ —Ä–∞–∑–±–æ—Ä —Å—Ç–∏—Ö–∞ ¬´${text}¬ª –ø–æ–ª—É—á–µ–Ω.\n\n–ù–∞—à –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç —É–∂–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –µ–≥–æ. –í —Ç–µ—á–µ–Ω–∏–µ 24 —á–∞—Å–æ–≤ –≤—ã –ø–æ–ª—É—á–∏—Ç–µ –≥–æ—Ç–æ–≤—É—é –∫–∞—Ä—Ç–æ—á–∫—É —Å –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ–º.`;

    await fetch(`${TELEGRAM_API}/sendMessage`, {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({
        chat_id: chatId,
        text: autoReplyText,
      }),
    });

    const notifyText = `üì£ –ù–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å!\n\n–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${senderName} (${senderId})\nID —á–∞—Ç–∞: ${chatId}\n\n–ó–∞–ø—Ä–æ—Å: ${text}`;

    await fetch(`${TELEGRAM_API}/sendMessage`, {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({
        chat_id: ADMIN_CHAT_ID,
        text: notifyText,
      }),
    });

    return res.status(200).json({ ok: true });
  } catch (err) {
    console.error('–û—à–∏–±–∫–∞:', err);
    return res.status(500).json({ ok: false, error: err.message });
  }
}
