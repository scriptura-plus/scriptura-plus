import { NextResponse } from 'next/server';

const TELEGRAM_BOT_TOKEN = process.env.TELEGRAM_BOT_TOKEN;
const ADMIN_CHAT_ID = process.env.TELEGRAM_ADMIN_CHAT_ID;
const TELEGRAM_API = `https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}`;

export async function POST(req) {
  try {
    const body = await req.json();
    const msg = body.message;

    if (!msg || !msg.text) {
      return NextResponse.json({ ok: true });
    }

    const text = msg.text.trim();
    const chatId = msg.chat.id.toString();
    const senderId = msg.from.id.toString();

    // === ADMIN MODE ===
    if (senderId === ADMIN_CHAT_ID && text.startsWith('/send')) {
      const parts = text.split(' ');

      if (parts.length < 3) {
        await fetch(`${TELEGRAM_API}/sendMessage`, {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({
            chat_id: ADMIN_CHAT_ID,
            text: '‚ùå –û—à–∏–±–∫–∞: –Ω–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç. –ù—É–∂–Ω–æ: /send <ID> <—Å—Å—ã–ª–∫–∞> [–Ω–∞–∑–≤–∞–Ω–∏–µ —Å—Ç–∏—Ö–∞]',
          }),
        });
        return NextResponse.json({ ok: true });
      }

      const targetChatId = parts[1];
      const messageLink = parts[2];
      const optionalTitle = parts.slice(3).join(' ');

      const finalMessage = `‚úÖ –í–∞—à–µ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ${optionalTitle ? ` —Å—Ç–∏—Ö–∞ ¬´${optionalTitle}¬ª` : ''} –≥–æ—Ç–æ–≤–æ!\n\nüßæ –û–∑–Ω–∞–∫–æ–º—å—Ç–µ—Å—å —Å –∫–∞—Ä—Ç–æ—á–∫–æ–π:\n${messageLink}\n\n–°–ø–∞—Å–∏–±–æ –∑–∞ –∏–Ω—Ç–µ—Ä–µ—Å –∫ –ë–æ–∂—å–µ–º—É –°–ª–æ–≤—É!`;

      // –û—Ç–ø—Ä–∞–≤–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
      await fetch(`${TELEGRAM_API}/sendMessage`, {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({
          chat_id: targetChatId,
          text: finalMessage.trim(),
        }),
      });

      // –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∞–¥–º–∏–Ω—É
      await fetch(`${TELEGRAM_API}/sendMessage`, {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({
          chat_id: ADMIN_CHAT_ID,
          text: `‚úÖ –°—Å—ã–ª–∫–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${targetChatId}.`,
        }),
      });

    } else {
      // === USER MODE ===
      const userName = msg.from.first_name || '–¥—Ä—É–≥';

      // –û—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
      await fetch(`${TELEGRAM_API}/sendMessage`, {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({
          chat_id: chatId,
          text: `üëã –°–ø–∞—Å–∏–±–æ, ${userName}! –í–∞—à –∑–∞–ø—Ä–æ—Å –Ω–∞ —Ä–∞–∑–±–æ—Ä —Å—Ç–∏—Ö–∞ ¬´${text}¬ª –ø–æ–ª—É—á–µ–Ω.\n\n–ù–∞—à –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç —É–∂–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –µ–≥–æ. –í —Ç–µ—á–µ–Ω–∏–µ 24 —á–∞—Å–æ–≤ –≤—ã –ø–æ–ª—É—á–∏—Ç–µ –≥–æ—Ç–æ–≤—É—é –∫–∞—Ä—Ç–æ—á–∫—É —Å –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ–º.`,
        }),
      });

      // –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω—É
      await fetch(`${TELEGRAM_API}/sendMessage`, {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({
          chat_id: ADMIN_CHAT_ID,
          text: `üîî –ù–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å!\n\n–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${userName} (${senderId})\nID —á–∞—Ç–∞: ${chatId}\n\n–ó–∞–ø—Ä–æ—Å: ${text}`,
        }),
      });
    }

    return NextResponse.json({ ok: true });
  } catch (error) {
    console.error('Error:', error);
    return NextResponse.json({ ok: true });
  }
}
